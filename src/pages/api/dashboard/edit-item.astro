---
import axios from "axios";
const pb = import.meta.env.PB_LOCATION;

let data = {
  id: "",
  title: "",
  description: "",
  cover: "",
  color: "",
  collectionId: "",
};
const request = Astro.request;
const method = request.method;

let body: FormData;
try {
  body = await request.formData();
  data = {
    id: (body.get("id") as string | null) || "",
    title: (body.get("title") as string | null) || "",
    description: (body.get("description") as string | null) || "",
    cover: (body.get("cover") as string | null) || "",
    color: (body.get("color") as string | null) || "",
    collectionId: (body.get("collectionId") as string | null) || "",
  };
} catch (error) {}

let response: any;
switch (method) {
  case "GET":
    const id = new URL(request.url).searchParams.get("id") as string | null;
    if (!id) {
      break;
    }
    response = await axios.get(`${pb}/api/collections/item/records/${id}`);
    data = {
      id,
      description: response.data.description,
      title: response.data.title,
      cover: response.data.cover,
      color: response.data.color,
      collectionId: response.data.collectionId,
    };
    break;
  case "PATCH":
    try {
      response = await axios.patch(
        `${pb}/api/collections/item/records/${data.id}`,
        {
          title: data.title,
          description: data.description,
          cover: data.cover,
          color: data.color,
        }
      );
    } catch (error) {
      console.log(error);
    }
    data = {
      id: response.data.id,
      title: response.data.title,
      description: response.data.description,
      cover: response.data.cover,
      color: response.data.color,
      collectionId: response.data.collectionId,
    };
    break;
  default:
    break;
}

const coverLink = `${pb}/api/files/${data.collectionId}/${data.id}/${data.cover}`;
---

<form
  hx-patch="/api/dashboard/edit-item"
  hx-swap="none"
  class="flex flex-col items-center justify-center gap-4"
>
  <input type="hidden" value={data.id} name="id" />
  <label for="title">title</label>
  <input
    id="title"
    name="title"
    value={data.title}
    type="text"
    class="input input-primary"
  />
  <label for="description">description</label>
  <input
    id="description"
    value={data.description}
    name="description"
    type="text"
    class="input input-primary"
  />
  <input type="color" value={data.color} name="color" />
  <input
    type="file"
    name="cover"
    value={data.cover}
    class="file-input file-input-bordered file-input-primary w-full max-w-xs"
  />
  <img src={coverLink} alt="no cover photo" />
  <button class="btn btn-primary">save</button>
</form>
