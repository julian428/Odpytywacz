---
import Editor from "@components/Editor";
import FileNav from "@components/fileNav.astro";
import DashboardLayout from "@layouts/DashboardLayout.astro";
import { SpinnerIcon } from "@lib/icons";
import axios, { AxiosError } from "axios";

export const prerender = false;
const { playlistId, itemId } = Astro.params;
const pb_loc = import.meta.env.PB_LOCATION;
const method = Astro.request.method;
const userData = Astro.locals.user;

let data = {
  id: "",
  content: "",
  title: "",
  expand: { playlist: { id: "", title: "" } },
};

let message: AlertMessage = {
  show: false,
  type: "",
  message: "",
};

switch (method) {
  case "POST":
    try {
      const formBody = await Astro.request.formData();
      const content = formBody.get("editor-content") as string;
      const title = formBody.get("title") as string;
      const playlistTitle = formBody.get("playlistTitle") as string;

      data = {
        id: itemId || "",
        content,
        title,
        expand: {
          playlist: {
            id: playlistId || "",
            title: playlistTitle,
          },
        },
      };
      await axios.patch(
        `${pb_loc}/api/collections/item/records/${itemId}`,
        {
          content,
        },
        {
          headers: {
            Authorization: `Bearer ${userData?.token}`,
          },
        }
      );
      message.show = true;
      message.type = "success";
      message.message = "Updated the article.";
    } catch (error) {
      message.show = true;
      message.type = "error";
      if (error instanceof AxiosError) {
        message.message = error.response?.data.message;
      } else {
        message.message = "Something went wrong.";
      }
    }
    break;
  default:
    try {
      const response = await axios.get(`
  ${pb_loc}/api/collections/item/records/${itemId}?fields=id,content,title,expand.playlist.id,expand.playlist.title&expand=playlist`);
      data = response.data;
    } catch (error) {
      message.show = true;
      message.type = "error";
      if (error instanceof AxiosError) {
        message.message = "Can't find this article.";
      } else {
        message.message = "Something went wrong.";
      }
    }
    break;
}
---

<DashboardLayout message={message}>
  <form class="flex flex-col relative">
    <FileNav
      bread_crumbs={[
        {
          href: `/dashboard/${playlistId}/config`,
          title: data.expand.playlist.title,
          type: ".",
        },
        {
          href: `/dashboard/${data.expand.playlist.id}/${data.id}/config`,
          title: data.title,
          type: ".",
        },
        {
          href: "",
          title: "article",
          type: ".md",
          className: "text-primary",
        },
      ]}
      save_content={{ url: `/dashboard/${playlistId}/${itemId}/article` }}
    />
    <input type="hidden" name="title" value={data.title} />
    <input
      type="hidden"
      name="playlistTitle"
      value={data.expand.playlist.title}
    />
    <Editor client:only content={data.content} />
  </form>
  <div
    id="loading"
    class="htmx-indicator alert text-base px-4 py-2 rounded-none w-fit absolute flex justify-between bottom-4 right-4"
  >
    <div class="animate-spin">
      <SpinnerIcon />
    </div>
     Loading
  </div>
</DashboardLayout>
